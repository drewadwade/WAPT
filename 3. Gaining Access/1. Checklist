Checklist

### Access Control
[ ] Test password quality rules
[ ] Test for username enumeration
[ ] Test for authentication bypass  
[ ] Test for bruteforce protection  
[ ] Test any account recovery function
[ ] Test any "remember me" function
[ ] Test any impersonation function
[ ] Test username uniqueness
[ ] Test for autocomplete on password forms/input  
[ ] Test CAPTCHA  
[ ] Test multi factor authentication  
[ ] Test for logout functionality presence  
[ ] Test for cache management on HTTP (eg Pragma, Expires, Max-age)  
[ ] Test for default logins  
[ ] Check for unsafe distribution of credentials
[ ] Test for fail-open conditions
[ ] Test any multi-stage mechanisms
[ ] Test for out-of channel notification of account lockouts and successful password changes  
[ ] Test for consistent authentication across applications with shared authentication schema / SSO 

### Session Management
[ ] Establish how session management is handled in the application (eg, tokens in cookies, token in URL)  
[] ] Check session tokens for cookie flags (httpOnly and secure)  
[ ] Check session cookie scope (path and domain)  
[ ] Check session cookie duration (expires and max-age)  
[ ] Check session termination after a maximum lifetime  
[ ] Check session termination after relative timeout  
[ ] Check session termination after logout  
[ ] Test to see if users can have multiple simultaneous sessions  
[ ] Test session cookies for randomness  
[ ] Confirm that new session tokens are issued on login, role change and logout  
[ ] Test for consistent session management across applications with shared session management  
[ ] Test for session puzzling  
[ ] Test for CSRF and clickjacking  
[ ] Test tokens for meaning
[ ] Check for insecure transmission of tokens
[ ] Check for disclosure of tokens in logs
[ ] Check mapping of tokens to sessions
[ ] Understand the access control requirements
[ ] Test controls, using multiple accounts if possible
[ ] Test for insecure access control methods (request parameters, Referer header, etc)

### Authorization
[ ] Test for path traversal  
[ ] Test for bypassing authorization schema  
[ ] Test for vertical Access control problems (a.k.a. Privilege Escalation)  
[ ] Test for horizontal Access control problems (between two users at the same privilege level)  
[ ] Test for missing authorization  

### Input Handling
[ ] Fuzz all request parameters
[ ] Test for SQL injection
[ ] Identify all reflected data
[ ] Test for reflected XSS
[ ] Test for HTTP header injection
[ ] Test for arbitrary redirection
[ ] Test for stored attacks
[ ] Test for OS command injection
[ ] Test for path traversal
[ ] Test for script injection
[ ] Test for file inclusion
[ ] Test for SMTP injection
[ ] Test for native software flaws (buffer overflow, integer bugs, format strings)
[ ] Test for SOAP injection
[ ] Test for LDAP injection
[ ] Test for XPath injection
[ ] Test for Cross Site Flashing  
[ ] Test for HTML Injection  
[ ] Test for ORM Injection  
[ ] Test for XML Injection  
[ ] Test for XXE Injection  
[ ] Test for SSI Injection  
[ ] Test for XQuery Injection  
[ ] Test for IMAP/SMTP Injection  
[ ] Test for Code Injection  
[ ] Test for Expression Language Injection  
[ ] Test for Command Injection  
[ ] Test for Overflow (Stack, Heap and Integer)  
[ ] Test for Format String  
[ ] Test for incubated vulnerabilities  
[ ] Test for HTTP Splitting/Smuggling  
[ ] Test for HTTP Verb Tampering  
[ ] Test for Open Redirection  
[ ] Test for Local File Inclusion  
[ ] Test for Remote File Inclusion  
[ ] Compare client-side and server-side validation rules  
[ ] Test for NoSQL injection  
[ ] Test for HTTP parameter pollution  
[ ] Test for auto-binding  
[ ] Test for Mass Assignment  
[ ] Test for NULL/Invalid Session Cookie  

### Denial of Service
[ ] Test for anti-automation  
[ ] Test for account lockout  
[ ] Test for HTTP protocol DoS  
[ ] Test for SQL wildcard DoS  

### Application Logic
[ ] Identify the logic attack surface
[ ] Test transmission of data via the client
[ ] Test for reliance on client-side input validation
[ ] Test any thick-client components (Java, ActiveX, Flash)
[ ] Test multi-stage processes for logic flaws
[ ] Test handling of incomplete input
[ ] Test trust boundaries
[ ] Test transaction logic
[ ] Test for feature misuse  
[ ] Test for lack of non-repudiation  
[ ] Test for trust relationships  
[ ] Test for integrity of data  
[ ] Test segregation of duties  

### Cryptography
[ ] Check if data which should be encrypted is not  
[ ] Check for wrong algorithms usage depending on context  
[ ] Check for weak algorithms usage  
[ ] Check for proper use of salting  
[ ] Check for randomness functions  

Risky Functionality - File Uploads
[ ] Test that acceptable file types are whitelisted  
[ ] Test that file size limits, upload frequency and total file counts are defined and are enforced  
[ ] Test that file contents match the defined file type  
[ ] Test that all file uploads have Anti-Virus scanning in-place.  
[ ] Test that unsafe filenames are sanitised  
[ ] Test that uploaded files are not directly accessible within the web root  
[ ] Test that uploaded files are not served on the same hostname/port  
[ ] Test that files and other media are integrated with the authentication and authorisation schemas  

### Risky Functionality - Card Payment
[ ] Test for known vulnerabilities and configuration issues on Web Server and Web Application  
[ ] Test for default or guessable password  
[ ] Test for non-production data in live environment, and vice-versa  
[ ] Test for Injection vulnerabilities  
[ ] Test for Buffer Overflows  
[ ] Test for Insecure Cryptographic Storage  
[ ] Test for Insufficient Transport Layer Protection  
[ ] Test for Improper Error Handling  
[ ] Test for all vulnerabilities with a CVSS v2 score > 4.0  
[ ] Test for Authentication and Authorization issues  
[ ] Test for CSRF  

### HTML 5
[ ] Test Web Messaging  
[ ] Test for Web Storage SQL injection  
[ ] Check CORS implementation  
[ ] Check Offline Web Application  

### Application Hosting
[ ] Test segregation in shared infrastructures
[ ] Test segregation between ASP-hosted applications
[ ] Test for web server vulnerabilities
[ ] Default credentials
[ ] Default content
[ ] Dangerous HTTP methods
[ ] Proxy functionality
[ ] Virtual hosting mis-configuration
[ ] Bugs in web server software

### Miscellaneous
[ ] Check for DOM-based attacks
[ ] Check for frame injection
[ ] Check for local privacy vulnerabilities
[ ] Persistent cookies
[ ] Caching
[ ] Sensitive data in URL parameters
[ ] Forms with autocomplete enabled
[ ] Follow up any information leakage
[ ] Check for weak SSL ciphers